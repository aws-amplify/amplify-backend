name: build_with_cache
description: builds the source code if cache miss and caches the result
inputs:
  node-version:
    required: true
  cdk-lib-version:
    required: true
runs:
  using: composite
  steps:
    # Validate that non-blank inputs are provided.
    # This is to ensure that inputs are plumbed and not defaulted accidentally in action call chains.
    # The 'required' input property does not assert this if value is provided at runtime.
    - name: Validate input
      shell: bash
      run: |
        if [ -z "${{ inputs.cdk-lib-version }}" ]; then
          echo "CDK Lib version must be provided"
          exit 1;
        fi
        if [ -z "${{ inputs.node-version }}" ]; then
          echo "Node version must be provided"
          exit 1;
        fi
    - uses: ./.github/actions/install_with_cache
      with:
        node-version: ${{ inputs.node-version }}
        cdk-lib-version: ${{ inputs.cdk-lib-version }}
    # Get the sha using local repository checkout instead of GitHub context.
    # Some workflows might be trying to build repository using older commits.
    - name: Get current commit sha
      id: get-current-commit-sha
      shell: bash
      run: |
        current_commit_sha=$(git rev-parse HEAD)
        echo "current_commit_sha=$current_commit_sha"
        echo "current_commit_sha=$current_commit_sha" >> "$GITHUB_OUTPUT";
    # cache build output based on commit sha
    - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # version 4.2.0
      id: build-cache
      with:
        path: '**/lib'
        key: ${{ steps.get-current-commit-sha.outputs.current_commit_sha }}-node${{ inputs.node-version }}-cdklib${{ inputs.cdk-lib-version }}
        enableCrossOsArchive: true
    # only build if cache miss
    - if: steps.build-cache.outputs.cache-hit != 'true'
      shell: bash
      run: npm run build
