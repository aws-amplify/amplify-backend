/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type AwsAppsyncAuthorizationType =
  | 'AMAZON_COGNITO_USER_POOLS'
  | 'API_KEY'
  | 'AWS_IAM'
  | 'AWS_LAMBDA'
  | 'OPENID_CONNECT';
export type AwsRegion = string;

/**
 * Config format for Amplify Gen 2 client libraries to communicate with backend services.
 */
export interface AWSAmplifyBackendOutputs {
  /**
   * Version of this schema
   */
  version: '1';
  /**
   * Outputs manually specified by developers for use with frontend library
   */
  analytics?: {
    /**
     * AWS Region of Amazon Pinpoint resources
     */
    aws_region: AwsRegion;
    /**
     * Amazon Pinpoint App ID
     */
    pinpoint_app_id: string;
  };
  /**
   * Outputs manually specified by developers for use with frontend library
   */
  api?: {
    endpoints: {
      /**
       * API resource name
       */
      name: string;
      /**
       * Invoke endpoint of the API resource
       */
      url: string;
      /**
       * AWS Region of the API resource
       */
      aws_region: AwsRegion;
      authorization_types: AwsAppsyncAuthorizationType[];
      default_authorization_type: AwsAppsyncAuthorizationType;
    }[];
  };
  /**
   * Outputs generated from defineAuth
   */
  auth?: {
    /**
     * AWS Region of Amazon Cognito resources
     */
    aws_region: AwsRegion;
    /**
     * Cognito User Pool ID
     */
    user_pool_id: string;
    /**
     * Cognito User Pool Client ID
     */
    user_pool_client_id: string;
    /**
     * Cognito Identity Pool ID
     */
    identity_pool_id: string;
    /**
     * Cognito User Pool password policy
     */
    password_policy?: {
      min_length?: number;
      require_numbers?: boolean;
      require_lowercase?: boolean;
      require_uppercase?: boolean;
      require_symbols?: boolean;
    };
    /**
     * Identity providers set on Cognito User Pool
     *
     * @minItems 0
     */
    identity_providers?: string[];
    /**
     * Cognito Domain used for identity providers
     */
    oauth_domain?: string;
    /**
     * @minItems 0
     */
    oauth_scope?: string[];
    /**
     * URIs used to redirect after signing in using an identity provider
     */
    oauth_redirect_sign_in?: string[];
    /**
     * URIs used to redirect after signing out
     */
    oauth_redirect_sign_out?: string[];
    oauth_response_type?: 'code' | 'token';
    /**
     * Cognito User Pool standard attributes
     */
    standard_attributes?: {
      [k: string]: AmazonCognitoStandardAttributesConfig;
    };
    /**
     * Cognito User Pool username attributes
     */
    username_attributes?: ('EMAIL' | 'PHONE')[];
    user_verification_mechanisms?: ('EMAIL' | 'PHONE')[];
    unauthenticated_identities_enabled?: boolean;
    mfa_configuration?: 'NONE' | 'OPTIONAL' | 'REQUIRED';
    mfa_methods?: ('SMS' | 'TOTP')[];
  };
  /**
   * Outputs generated from defineData
   */
  data?: {
    aws_region: AwsRegion;
    /**
     * AppSync endpoint URL
     */
    url: string;
    /**
     * generated model introspection schema for use with generateClient
     */
    model_introspection?: {
      [k: string]: unknown;
    };
    api_key?: string;
    default_authorization_type: AwsAppsyncAuthorizationType;
    authorization_types: AwsAppsyncAuthorizationType[];
    conflict_resolution_mode?:
      | 'AUTO_MERGE'
      | 'OPTIMISTIC_CONCURRENCY'
      | 'LAMBDA';
  };
  /**
   * Outputs manually specified by developers for use with frontend library
   */
  geo?: {
    /**
     * AWS Region of Amazon Location Service resources
     */
    aws_region: AwsRegion;
    /**
     * Maps from Amazon Location Service
     */
    maps?: {
      items: AmazonLocationServiceConfig[];
      default: string;
    };
    /**
     * Location search (search by places, addresses, coordinates)
     */
    search_indices?: {
      items: string[];
      default: string;
    };
    /**
     * Geofencing (visualize virtual perimeters)
     */
    geofence_collections?: {
      items: string[];
      default: string;
    };
  };
  /**
   * Outputs generated from defineStorage
   */
  storage?: {
    aws_region: AwsRegion;
    bucket_name: string;
  };
  /**
   * Outputs generated from backend.addOutput({ custom: <config> })
   */
  custom?: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` ".*".
 */
export interface AmazonCognitoStandardAttributesConfig {
  required?: boolean;
}
export interface AmazonLocationServiceConfig {
  /**
   * Map resource name
   */
  name?: string;
  /**
   * Map style
   */
  style?: string;
}
