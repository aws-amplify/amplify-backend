/**
 * outputs generated by AWS Amplify (Gen 2) backends
 */
export type ClientConfigV1 = {
  /**
   * JSON schema
   */
  $schema?: string;
  /**
   * Outputs manually specified by developers for use with frontend library
   */
  analytics?: Analytics;
  /**
   * Outputs generated from defineAuth
   */
  auth?: Auth;
  /**
   * Outputs generated from backend.addOutput({ custom: <config> })
   */
  custom?: { [key: string]: any };
  /**
   * Outputs generated from defineData
   */
  data?: Data;
  /**
   * Outputs manually specified by developers for use with frontend library
   */
  geo?: Geo;
  /**
   * Outputs generated from defineStorage
   */
  storage?: Storage;
  /**
   * Version of this schema
   */
  version: '1';
};

/**
 * Outputs manually specified by developers for use with frontend library
 */
export type Analytics = {
  /**
   * AWS Region of Amazon Pinpoint resources
   */
  aws_region?: string;
  /**
   * Amazon Pinpoint App ID
   */
  pinpoint_app_id?: string;
};

/**
 * Outputs generated from defineAuth
 */
export type Auth = {
  /**
   * AWS Region of Amazon Cognito resources
   */
  aws_region?: string;
  /**
   * Cognito Identity Pool ID
   */
  identity_pool_id?: string;
  /**
   * Identity providers set on Cognito User Pool
   */
  identity_providers?: string[];
  mfa_configuration?: MfaConfiguration;
  mfa_methods?: MfaMethod[];
  /**
   * Cognito Domain used for identity providers
   */
  oauth_domain?: string;
  /**
   * URIs used to redirect after signing in using an identity provider
   */
  oauth_redirect_sign_in?: string[];
  /**
   * URIs used to redirect after signing out
   */
  oauth_redirect_sign_out?: string[];
  oauth_response_type?: OauthResponseType;
  oauth_scope?: string[];
  /**
   * Cognito User Pool password policy
   */
  password_policy?: PasswordPolicy;
  /**
   * Cognito User Pool standard attributes
   */
  standard_attributes?: { [key: string]: StandardAttributeValue };
  unauthenticated_identities_enabled?: boolean;
  /**
   * Cognito User Pool Client ID
   */
  user_pool_client_id?: string;
  /**
   * Cognito User Pool ID
   */
  user_pool_id?: string;
  user_verification_mechanisms?: User[];
  /**
   * Cognito User Pool username attributes
   */
  username_attributes?: User[];
};

export type MfaConfiguration = 'NONE' | 'OPTIONAL' | 'REQUIRED';

export type MfaMethod = 'SMS' | 'TOTP';

export type OauthResponseType = 'code' | 'token';

/**
 * Cognito User Pool password policy
 */
export type PasswordPolicy = {
  min_length?: number;
  require_lowercase?: boolean;
  require_numbers?: boolean;
  require_symbols?: boolean;
  require_uppercase?: boolean;
};

export type StandardAttributeValue = {
  required?: boolean;
};

export type User = 'EMAIL' | 'PHONE';

/**
 * Outputs generated from defineData
 */
export type Data = {
  api_key?: string;
  authorization_types?: DefaultAuthorizationTypeElement[];
  aws_region?: string;
  default_authorization_type?: DefaultAuthorizationTypeElement;
  /**
   * generated model introspection schema for use with generateClient
   */
  model_introspection?: { [key: string]: any };
  /**
   * AppSync endpoint URL
   */
  url?: string;
};

export type DefaultAuthorizationTypeElement =
  | 'AMAZON_COGNITO_USER_POOLS'
  | 'API_KEY'
  | 'AWS_IAM'
  | 'AWS_LAMBDA'
  | 'OPENID_CONNECT';

/**
 * Outputs manually specified by developers for use with frontend library
 */
export type Geo = {
  /**
   * AWS Region of Amazon Location Service resources
   */
  aws_region?: string;
  /**
   * Record of maps from Amazon Location Service
   */
  maps?: { [key: string]: any };
};

/**
 * Outputs generated from defineStorage
 */
export type Storage = {
  aws_region?: string;
  name?: string;
};
