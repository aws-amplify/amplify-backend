{
 "Resources": {
  "lambdaauthorizerlambdaServiceRoleCF35E55A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "lambdaauthorizerlambda4ACE2410": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4a66b7e5d6972e7f007f7b05bc1120abeebb6878a29ee6071a79eac87896494d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "lambdaauthorizerlambdaServiceRoleCF35E55A",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "lambdaauthorizerlambdaServiceRoleCF35E55A"
   ]
  },
  "lambdaauthorizerlambdaappsyncauthinvoke93C85899": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "lambdaauthorizerlambda4ACE2410",
      "Arn"
     ]
    },
    "Principal": "appsync.amazonaws.com"
   }
  }
 },
 "Outputs": {
  "amplifytestAppIdtestBranchNamebranch7d6f6c854afunctionlambdaauthorizerlambdaD2057200Arn": {
   "Value": {
    "Fn::GetAtt": [
     "lambdaauthorizerlambda4ACE2410",
     "Arn"
    ]
   }
  }
 }
}